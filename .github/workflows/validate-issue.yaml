name: Validate Environment Request
on:
  issues:
    types:
      - opened

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue has the right label
        if: contains(github.event.issue.labels.*.name, 'environment-request')
        run: echo "This is an environment request issue."

      - name: Extract issue details
        id: extract-issue
        run: |
          echo "::set-output name=environment_identifier::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=environment_identifier:).*')"
          echo "::set-output name=azure_region::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=azure_region:).*')"
          echo "::set-output name=business_unit::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=business_unit:).*')"
          echo "::set-output name=access_connector_id::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=access_connector_id:).*')"
          echo "::set-output name=user_assigned_managed_identity::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=user_assigned_managed_identity:).*')"
          echo "::set-output name=storage_container_url::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=storage_container_url:).*')"
          echo "::set-output name=owner_group::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=owner_group:).*')"
          echo "::set-output name=workspace_name::$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=workspace_name:).*')"

      - name: Validate Inputs
        run: |
          if [[ "${{ extract-issue.outputs.environment_identifier }}" =~ ^(dev|stg|nonprod|sbx|prod)$ ]]; then
            echo "Valid environment identifier."
          else
            echo "Invalid environment identifier: ${{ steps.extract-issue.outputs.environment_identifier }}"; exit 1;
          fi

          if [[ "${{ steps.extract-issue.outputs.azure_region }}" =~ ^(centralus|eastus|eastus2)$ ]]; then
            echo "Valid Azure region."
          else
            echo "Invalid Azure region: ${{ steps.extract-issue.outputs.azure_region }}"; exit 1;
          fi

          if [[ "${{ steps.extract-issue.outputs.access_connector_id }}" =~ ^/subscriptions/.*$ ]]; then
            echo "Valid Access Connector ID."
          else
            echo "Invalid Access Connector ID: ${{ steps.extract-issue.outputs.access_connector_id }}"; exit 1;
          fi

          if [[ "${{ steps.extract-issue.outputs.storage_container_url }}" =~ ^abfss://.*@.*\.dfs\.core\.windows\.net$ ]]; then
            echo "Valid Storage Container URL."
          else
            echo "Invalid Storage Container URL: ${{ steps.extract-issue.outputs.storage_container_url }}"; exit 1;
          fi

          if [[ "${{ steps.extract-issue.outputs.owner_group }}" =~ ^azu_.*$ ]]; then
            echo "Valid Owner Group."
          else
            echo "Invalid Owner Group: ${{ steps.extract-issue.outputs.owner_group }}"; exit 1;
          fi

          if [[ ! "${{ steps.extract-issue.outputs.workspace_name }}" =~ .*workspace.* ]]; then
            echo "Valid Workspace Name."
          else
            echo "Invalid Workspace Name: ${{ steps.extract-issue.outputs.workspace_name }}"; exit 1;
          fi

      - name: Issue validation passed
        run: echo "All inputs are valid."

