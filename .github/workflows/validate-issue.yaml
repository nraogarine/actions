name: Validate Issue Form Inputs

on:
  issues:
    types: [opened, edited]

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    if: github.event.issue.title == 'Your-Issue-Form-Title'  # Replace with the actual title of the issue form
    steps:
    - name: Extract issue form details
      id: issue-details
      uses: actions-ecosystem/action-get-issue-body@v1
      with:
        issue_number: ${{ github.event.issue.number }}

    - name: Set environment variables
      run: |
        echo "environment_identifier=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=environment-identifier: ).*')" >> $GITHUB_ENV
        echo "azure_region=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=azure-region: ).*')" >> $GITHUB_ENV
        echo "business_unit=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=business-unit: ).*')" >> $GITHUB_ENV
        echo "access_connector_id=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=access-connector-id: ).*')" >> $GITHUB_ENV
        echo "user_assigned_managed_identity=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=user-assigned-managed-identity: ).*')" >> $GITHUB_ENV
        echo "storage_container_url=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=storage-container-url: ).*')" >> $GITHUB_ENV
        echo "owner_group=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=owner-group: ).*')" >> $GITHUB_ENV
        echo "workspace_name=$(echo '${{ steps.issue-details.outputs.body }}' | grep -Po '(?<=workspace-name: ).*')" >> $GITHUB_ENV

    - name: Validate Inputs
      run: |
        # Validate environment identifier
        if [[ ! "${{ env.environment_identifier }}" =~ ^(dev|stg|nonprod|sbx|prod)$ ]]; then
          echo "Invalid environment-identifier: ${{ env.environment_identifier }}"
          exit 1
        fi

        # Validate azure region
        if [[ ! "${{ env.azure_region }}" =~ ^(centralus|eastus|eastus2)$ ]]; then
          echo "Invalid azure-region: ${{ env.azure_region }}"
          exit 1
        fi

        # Validate access-connector-id
        if [[ ! "${{ env.access_connector_id }}" =~ ^/subscriptions/ ]]; then
          echo "Invalid access-connector-id: ${{ env.access_connector_id }}"
          exit 1
        fi

        # Validate storage-container-url
        if [[ ! "${{ env.storage_container_url }}" =~ ^abfss://.+@.+\.dfs\.core\.windows\.net$ ]]; then
          echo "Invalid storage-container-url: ${{ env.storage_container_url }}"
          exit 1
        fi

        # Validate owner-group
        if [[ ! "${{ env.owner_group }}" =~ ^azu_ ]]; then
          echo "Invalid owner-group: ${{ env.owner_group }}"
          exit 1
        fi

        # Validate workspace-name (it should not be a URL)
        if [[ "${{ env.workspace_name }}" =~ ^http ]]; then
          echo "Invalid workspace-name: ${{ env.workspace_name }} should not be a URL."
          exit 1
        fi

        echo "All inputs are valid."

